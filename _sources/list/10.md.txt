#  一文了解 Python 中的 append() 与 extend()方法

Python 中最常用的数据结构之一是列表，列表是 Python 中最重要的工具之一。列表类似于数组，但不同之处在于列表可以保存任何数据类型，例如整数、字符串。而且，它是可变的，即可以修改。在本文中，我们将学习一些将元素添加到列表中的方法，了解 append() 与 extend() 之间的区别。

## append() 方法

python 中的 append() 方法会将一个元素添加到已创建的列表中。它不会返回新列表，而是通过在列表末尾添加一个元素来修改现有列表。

**语法：**

list.append(obj)

**参数：**

obj -- 添加到列表末尾的对象。

**返回值：**

该方法无返回值，但是会修改原来的列表。

## 使用 append() 在列表末尾添加元素

我们创建一个包含多个数字的列表 list1，使用 append() 方法在列表末尾添加了 4、5 两个元素。

```python
>>> list1=[1,2,3]
>>> list1.append(4)
>>> list1.append(5)
>>> list1
[1, 2, 3, 4, 5]
```

## 使用 append() 在列表末尾附加列表

我们还可以通过 append() 向列表末尾添加一个列表。

下面示例中，我们创建了 list1、list2 两个列表，使用 append() 将 list2 添加到 list1。

```python
>>> list1=[1,2,3]
>>> list2=[4,5,6]
>>> list1.append(list2)
>>> list1
[1, 2, 3, [4, 5, 6]]
```

从运行结果可以看到，list2 作为一个元素存在。

## extend() 方法 

用于在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）。

**语法：**

list.extend(seq)
**参数：**

seq -- 元素列表。

**返回值：**

该方法没有返回值，但会在已存在的列表中添加新的列表内容。

## 使用 extend() 在列表末尾附加列表

下面示例中，我们创建了 list1、list2 两个列表，使用 extend() 将 list2 添加到 list1。

```python
>>> list1=[1,2,3]
>>> list2=[4,5,6]
>>> list1.extend(list2)
>>> list1
[1, 2, 3, 4, 5, 6]
```

从运行结果可以看到，list2 中的所有元素作为作为独立元素添加到 list1。

## 使用 extend() 将字符串附加到列表中

```python
>>> list1=[1,2,3]
>>> list1.extend("python")
>>> list1
[1, 2, 3, 'p', 'y', 't', 'h', 'o', 'n']
```

如果我们将字符串作为参数传递给 extend() 方法，因为字符串是可迭代的，extend() 方法将迭代字符串“python”中的每个字符并添加到列表。

## 使用 extend() 将元组附加到列表中

```python
>>> list1=[1,2,3]
>>> tuple1=(1,2,3)
>>> list1.extend(tuple1)
>>> list1
[1, 2, 3, 1, 2, 3]
```

同样，元组作为一个可迭代对象，可以使用 extend() 将元组每一个元素附加到列表中。

> 文章创作不易，如果您喜欢这篇文章，请关注、点赞并分享给朋友。如有意见和建议，请在评论中反馈！

# 一文精通 Python 中的条件语句

在现实生活中，我们需要做出一些决定，根据这些决定，我们决定下一步应该做什么。类似的情况也出现在编程中，编程语言中的条件语句决定了程序流程的执行方向。在本教程中，您将学习 if、if-else、elif 等条件语句的使用方法。

## if 语句

if 语句是最简单的条件语句。它用于决定是否执行某个语句或语句块。

**if 语句语法格式：**

```python
#开始
if 条件表达式:
  语句组1
语句组2
#结束
```

**if 语句流程图：**

如果条件表达式为真（True），执行它下面的语句组 1，否则，条件表达式为假（False）则不执行语句组 1。
因为 python 使用缩进来定义程序结构。因此，无论条件表达式是否成立，语句组 2 都会被执行。

**if 语句实例**

```python
x=6
if x%2==0:
    print(f"{x}是偶数。")
```

## if-else 语句

**if-else 语句语法格式：**

```python
#开始
if 条件表达式:
  语句组1
else:
  语句组2
#结束
```

**if-else 语句流程图：**

如果条件表达式为真（True），执行它下面的语句组 1，否则，条件表达式为假（False）,执行语句组 2。

**if-else 语句实例**

```python
x=6
if x%2==0:
    print(f"{x}是偶数。")
else:
    print(f"{x}是奇数。")
```

## if 语句嵌套

if 语句中可以包含 if 语句，用于多个条件的判断。if 语句嵌套可以有多种形式。

**if 语句嵌套语法格式：**

```python
#开始
if 条件1:
  语句组1
else:
  if 条件2:
    语句组2
  else:
    语句组3
#结束
```

**if 语句嵌套流程图：**

**if 语句嵌套实例**

```python
x=6
y=10
if x>y:
    print(f"{x}大于{y}。")
else:
    if x<y:
        print(f"{x}小于{y}。")
    else:
        print(f"{x}等于{y}。")

```

## if-elif 语句

对于多个条件进行判断，可以使用 if 语句嵌套。但是条件多了，程序代码不易阅读也容易出错。我们还可以使用 if-elif 语句处理多个条件。
if-elif 语句从上到下执行。一旦条件之一为真，就会执行与之关联的语句，并绕过其余部分。如果所有条件都不为真，则将执行 else 语句。

**if-elif 语句语法格式：**

```python
#开始
if 条件1:
  语句组1
elif 条件2:
  语句组2
  .
  .
  .
elif 条件n:
  语句组n
else:
  语句组n+1
#结束
```

**if-elif 语句流程图：**

**if-elif 语句实例**

```python
x=float(input("请输入你的成绩："))
if x>=90:
    print("优秀")
elif x>80:
    print("良好")
elif x>60:
    print("及格")
else:
    print("不及格")
```

条件语句是程序设计基本的编程结构，允许根据指定的条件控制程序流程。提供了一种在程序中做出决策并根据这些决策执行不同代码的方法。

重要的是，在 Python 中使用条件语句时，正确的缩进至关重要，缩进决定代码结构。

**文章创作不易，如果您喜欢这篇文章，请关注、点赞并分享给朋友。如有意见和建议，请在评论中反馈！**

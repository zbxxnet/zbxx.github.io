# 一文了解 Python 中的下划线 “_”

虽然下划线“\_”在大多数编程语言中仅用于变量名和函数名，但它在 Python 中具有特殊的功能。如果你是Python程序员，可能对下面代码很熟悉。

`for _ in range(10):`

`if __name__ == "__main__":`

本文章将介绍 Python 中如何使用下划线“_”。

## 解释器中保存表达式的值

Python 解释器将最后一个表达式的值存储到名为“\_”的特殊变量中。此功能已首先在标准的 CPython 解释器中使用，也可以在其他 Python 解释器中使用它。

```python
>>> 100
100
>>> _
100
>>> _*6
600
```

## 忽略特定值

下划线也用于忽略特定值。如果不需要特定值，只需将值指定为下划线即可。

```python
# 忽略一个值
>>> x,_,y = (1,2,3)
>>> x
1
>>> y
3
>>> _
2
# 忽略多个值
>>> x,*_,y = (1,2,3,4,5,6)
>>> x
1
>>> y
6
>>> _
[2, 3, 4, 5]
# 在循环中忽略值
>>> for _ in range(3):
    print("Hello World")
    
Hello World
Hello World
Hello World
```

## 变量和函数名称

下划线可能最常用的地方是变量和函数命名。PEP 8倡导用不同的命名风格来命名 Python 中的标识符。

1. 变量、函数和属性应该使用小写字母来拼写，如果有多个单词就使用下划线进行连接。

2. 类中受保护的实例属性，应该以一个下划线开头。

3. 类中私有的实例属性，应该以两个下划线开头。

4. 模块级别的常量，应该采用全大写字母，如果有多个单词就用下划线进行连接。

在这里，下划线的使用并没有什么特殊的功能，只是一种约定。在 Python 国际化（i18n）/本地化（l10n）中也同样存在下划线的使用约定。

## 分隔数字

此功能是在 Python 3.6 中添加的，可以使用下划线分隔较长的数字，以提高可读性，不妨碍数字的计算。

```python
>>> num = 1_000_000
>>> num * 3
3000000
```

> 文章创作不易，如果您喜欢这篇文章，请关注、点赞并分享给朋友。如有意见和建议，请在评论中反馈！
